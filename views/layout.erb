<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/react/15.3.1/react.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/react/15.3.1/react-dom.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment-with-locales.min.js"></script>
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <script type="text/javascript" src="/browser-app.js"></script>
    <link href="/browser-app.css" rel="stylesheet" type="text/css" />

    <script type="text/javascript">
      window.onload = function() {
        var container = document.getElementById("content");

        var app = React.createElement(BrowserApp, {
          searchPath: "/status/search.json",
          searchPlaceholder: "search issues",

          initialFilter: "<%= params["f"] %>",
          initialResults: <%== JSON.generate(@search_results) %>,
          initialSelectedResult: <%= params["job_id"] || "null" %>,

          resultTag: function(props) {
            if (props.html)
              return React.createElement("div", {
                dangerouslySetInnerHTML: {__html: props.html}
              });

            var status = props.current ? "running"
                       : props.queued ? "queued"
                       : props.complete ? "complete"
                       : "failed";
            var e = React.createElement(
              "div", {},
              [
                React.createElement("small", { className: "time pull-right" }, [React.createElement("i", { className: "fa fa-clock-o" }), " " + moment(props.enqueued_at).calendar().toString()]),
                React.createElement("br"),
                React.createElement("span", { className: "status "+status }, status),
                React.createElement("strong", {}, props.branch),
                React.createElement("br"),
              ]
            );
            return e;
          }
        }, container.innerHTML);
        
        ReactDOM.render(app, container);
      };
    </script>

    <style type="text/css">
      a {
        color: #658EBF;
        text-decoration: none;
      }

      html, body, #content {
        height: 100%;
        width: 100%;
      }

      .pull-right {
        float: right;
      }

      .system-status {
        padding: 10px 15px;
        color: #fff;
        margin: 0 5px;
        border-radius: 5px;
      }

      .system-status.online {
        background: #19B81D;
      }

      .system-status.offline {
        background: #CE0005;
      }

      .status-label, .browser-app-results li .status {
        display: inline-block;
        width: 65px;
        text-align: center;
        margin-right: 5px;
        font-size: 0.9em;
        padding: 3px 0;
        border: 1px solid #ddd;
        border-radius: 5px;
        background-color: #efefef;
      }

      .browser-app-results li:hover {
        cursor: pointer;
      }

      .status.running {
        color: #19B81D;
      }
      
      .status.queued {
        color: #fff;
        background-color: #E99835 !important;
      }
      
      .status.complete {
        color: #fff;
        background-color: #19B81D !important;
      }
      
      .status.failed {
        color: #fff;
        background-color: #CE0005 !important;
      }

      .browser-app-results li .time {
        display: block;
        font-size: 10px;
      }

      .job .status label {
        display: inline-block;
        width: 125px;
        font-weight: bold;
      }

      .job pre {
        padding: 10px;
        margin-bottom: 50px;
        max-width: 100%;
        max-height: 400px;
        overflow-x: auto;
        overflow-y: auto;
        background-color: #efefef;
      }

      h1 {
        margin-top: 0px;
        font-size: 32px;
        font-weight: 700;
        color: #676767;
      }

      h2 {
        font-size: 16px;
        color: #676767;
      }

      table thead {
        font-size: 12px;
        color: #939393;
        text-transform: uppercase;
        text-align: left;
        letter-spacing: 1px;
      }

      table thead th {
        padding: 12px 0;
        font-weight: normal;
        border-bottom: 1px solid #e8e7e7;
      }

      table tbody td {
        padding: 12px 0;
        vertical-align: top;
      }

      table tbody tr:not(:first-child) td {
        border-top: 1px solid #e8e7e7;
      }

      table tbody, table tbody a {
        text-decoration: none;
      }

      table td span {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: pre;
        display: block;
      }

      table .user {
        width: 75px;
      }

      table .issue {
        width: 200px;
      }

      table .arguments {
        width: 155px;
      }

      table .date {
        padding-right: 20px;
      }
    </style>
  </head>

  <body>
    <div id="content">
      <div id="status-content">
        <% if resque_online? %>
          <span class="system-status online pull-right">Daemon Online <i class='fa fa-check'></i></span>
        <% else %>
          <span class="system-status offline pull-right">Daemon Offline <i class='fa fa-times'></i></span>
        <% end %>
      </div>

      <h1><i class="fa fa-medkit"></i> Perf-Check Status Page</h1>

      <%== yield %>
    </div>
  </body>
</html>
